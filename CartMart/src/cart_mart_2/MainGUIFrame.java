/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cart_mart_2;

import java.awt.Color;
import javax.swing.ImageIcon;

/**
 *
 * @author david
 */
public class MainGUIFrame extends javax.swing.JFrame {
    private ItemList inventory;

    /**
     * Creates new form MainGUIFrame
     * The overloaded constructor is used to create a new view without using the master inventory list
     * @param list
     */
    public MainGUIFrame(ItemList list) {
        ImageIcon logo = new ImageIcon(Cart_Mart_2.class.getResource("images/cartLogo.png"));
        this.setIconImage(logo.getImage());
        this.setTitle("Cart Mart");
        this.inventory = list;
        initComponents();
        ViewItems itemPanel = new ViewItems();
        itemPanel.viewItemResults(list);
        viewPanel.setBackground(Color.WHITE);
        viewPanel.setViewportView(itemPanel);
        viewPanel.setVisible(true);
        itemPanel.setVisible(true);
    }
    
    public MainGUIFrame(){
        this.inventory = Item.inventory;
        ImageIcon logo = new ImageIcon(Cart_Mart_2.class.getResource("images/cartLogo.png"));
        this.setIconImage(logo.getImage());
        this.setTitle("Cart Mart");
        initComponents();
        ViewItems itemPanel = new ViewItems();
        itemPanel.viewItemResults(Item.inventory);
        viewPanel.setBackground(Color.WHITE);
        viewPanel.setViewportView(itemPanel);
        viewPanel.setVisible(true);
        itemPanel.setVisible(true);
    }
    
    public void turnOn(){
        this.getContentPane().setBackground(Color.black);
        this.setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        navPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        cartCountLabel = new javax.swing.JLabel();
        emptyCartLabel = new javax.swing.JLabel();
        welcomLabel = new javax.swing.JLabel();
        sortLabel = new javax.swing.JLabel();
        searchLabel = new javax.swing.JLabel();
        sortMenu = new javax.swing.JComboBox<>();
        searchBar = new javax.swing.JTextField();
        goButton = new javax.swing.JButton();
        cartButton = new javax.swing.JButton();
        accountButton1 = new javax.swing.JButton();
        viewPanel = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        navPanel.setBackground(new java.awt.Color(255, 255, 255));
        navPanel.setLayout(null);

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cart_mart_2/images/cartLogo100.png"))); // NOI18N
        logoLabel.setText("jLabel1");
        logoLabel.setMaximumSize(new java.awt.Dimension(100, 100));
        logoLabel.setMinimumSize(new java.awt.Dimension(100, 100));
        logoLabel.setPreferredSize(new java.awt.Dimension(100, 100));
        navPanel.add(logoLabel);
        logoLabel.setBounds(0, 0, 100, 100);

        cartCountLabel.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        cartCountLabel.setForeground(new java.awt.Color(255, 0, 0));
        cartCountLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cartCountLabel.setText("0");
        cartCountLabel.setMaximumSize(new java.awt.Dimension(65, 65));
        cartCountLabel.setMinimumSize(new java.awt.Dimension(65, 65));
        cartCountLabel.setPreferredSize(new java.awt.Dimension(65, 65));
        navPanel.add(cartCountLabel);
        cartCountLabel.setBounds(615, 15, 80, 70);

        emptyCartLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cart_mart_2/images/emptyCart100.png"))); // NOI18N
        emptyCartLabel.setMaximumSize(new java.awt.Dimension(100, 100));
        emptyCartLabel.setMinimumSize(new java.awt.Dimension(100, 100));
        emptyCartLabel.setPreferredSize(new java.awt.Dimension(100, 100));
        navPanel.add(emptyCartLabel);
        emptyCartLabel.setBounds(600, 0, 100, 100);

        welcomLabel.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 24)); // NOI18N
        welcomLabel.setText("Welcome to Cart Mart!");
        navPanel.add(welcomLabel);
        welcomLabel.setBounds(110, 0, 280, 33);

        sortLabel.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 18)); // NOI18N
        sortLabel.setText("Sort:");
        navPanel.add(sortLabel);
        sortLabel.setBounds(330, 70, 50, 21);

        searchLabel.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 18)); // NOI18N
        searchLabel.setText("Search:");
        navPanel.add(searchLabel);
        searchLabel.setBounds(110, 70, 80, 21);

        sortMenu.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 14)); // NOI18N
        sortMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Price low to high", "Price high to low", "Name A-Z", "Name Z-A", "Department:", "     Bakery", "     Dry Grocery", "     Frozen", "     Meat", "     Produce", "     Refrigerated" }));
        sortMenu.setLightWeightPopupEnabled(false);
        sortMenu.setMaximumSize(new java.awt.Dimension(136, 27));
        sortMenu.setMinimumSize(new java.awt.Dimension(136, 27));
        sortMenu.setPreferredSize(new java.awt.Dimension(136, 27));
        sortMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortMenuActionPerformed(evt);
            }
        });
        navPanel.add(sortMenu);
        sortMenu.setBounds(380, 70, 136, 27);

        searchBar.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        searchBar.setMaximumSize(new java.awt.Dimension(136, 27));
        searchBar.setMinimumSize(new java.awt.Dimension(136, 27));
        searchBar.setPreferredSize(new java.awt.Dimension(136, 27));
        searchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBarKeyReleased(evt);
            }
        });
        navPanel.add(searchBar);
        searchBar.setBounds(180, 70, 136, 27);
        searchBar.getAccessibleContext().setAccessibleName("");

        goButton.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        goButton.setText("GO!");
        goButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goButtonMouseClicked(evt);
            }
        });
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });
        navPanel.add(goButton);
        goButton.setBounds(520, 70, 70, 27);

        cartButton.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        cartButton.setText("Cart");
        cartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartButtonActionPerformed(evt);
            }
        });
        navPanel.add(cartButton);
        cartButton.setBounds(490, 30, 100, 27);

        accountButton1.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        accountButton1.setLabel("Account");
        accountButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountButton1ActionPerformed(evt);
            }
        });
        navPanel.add(accountButton1);
        accountButton1.setBounds(110, 30, 100, 27);

        viewPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(navPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE)
            .addComponent(viewPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(navPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goButtonMouseClicked
        // TODO add your handling code here:
        //drop down menu for sorting
        //code for this event is in goButtonActionPerformed
    }//GEN-LAST:event_goButtonMouseClicked

    /**
     * For every keystroke in the search bar, the display will be updated with the value in the search bar
     * It uses the searchBar.getText() method to capture the data and send to the InventorySort function
     * It then populates the view with each item matching the criteria
     * @param evt 
     */
    private void searchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBarKeyReleased
        // TODO add your handling code here:
        //search bar, updates every key release
        ItemList newList = new InventorySort(inventory,1,String.valueOf(searchBar.getText())).filteredList;
        viewPanel.setVisible(false);
        ViewItems itemPanel = new ViewItems();
        itemPanel.viewItemResults(newList);
        viewPanel.setViewportView(itemPanel);
        viewPanel.setVisible(true);
        itemPanel.setVisible(true);
    }//GEN-LAST:event_searchBarKeyReleased

    private void sortMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sortMenuActionPerformed

    /**
     * This function filters the data by a specific criteria or sorts the data to a specified value
     * It uses the index of the selected item in the combo box to depict what occurs
     * @param evt 
     */
    private void goButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed
        // TODO add your handling code here:
        int choice = sortMenu.getSelectedIndex();
        ItemList newList = new InventorySort(inventory, choice).list;
        viewPanel.setVisible(false);
        ViewItems itemPanel = new ViewItems();
        itemPanel.viewItemResults(newList);
        viewPanel.setViewportView(itemPanel);
        viewPanel.setVisible(true);
        itemPanel.setVisible(true);
    }//GEN-LAST:event_goButtonActionPerformed

    /**
     * This function causes the view to change to the cart using the static order to be displayed
     * @param evt 
     */
    private void cartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartButtonActionPerformed
        // TODO add your handling code here:
        Cart_Mart_2.inCart = true;
        Cart_Mart_2.changeView(2, 1);
    }//GEN-LAST:event_cartButtonActionPerformed

    private void accountButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountButton1ActionPerformed
        // TODO add your handling code here:
        Cart_Mart_2.changeView(9,1);
    }//GEN-LAST:event_accountButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUIFrame().setVisible(true);
            }
        });
    }
    
    /**
     * The following 2 functions set or return the text value of the items in cart image
     * @param count 
     */
    public void setCartText(int count){
        this.cartCountLabel.setText(String.valueOf(count));
    }
    public int getCartText(){
        return Integer.valueOf(this.cartCountLabel.getText());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accountButton1;
    private javax.swing.JButton cartButton;
    private javax.swing.JLabel cartCountLabel;
    private javax.swing.JLabel emptyCartLabel;
    private javax.swing.JButton goButton;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JPanel navPanel;
    private javax.swing.JTextField searchBar;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JLabel sortLabel;
    private javax.swing.JComboBox<String> sortMenu;
    private javax.swing.JScrollPane viewPanel;
    private javax.swing.JLabel welcomLabel;
    // End of variables declaration//GEN-END:variables
}
